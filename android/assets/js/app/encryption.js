// Generated by CoffeeScript 1.3.3
(function() {

  define(function() {
    return {
      generateKeyPairAsync: function(result) {
        var key;
        key = new RSAKey();
        return key.generateAsync(256, "03", function() {
          var privatekey;
          privatekey = {
            n: linebrk(key.n.toString(16), 64),
            d: linebrk(key.d.toString(16), 64),
            p: linebrk(key.p.toString(16), 64),
            q: linebrk(key.q.toString(16), 64),
            dmp1: linebrk(key.dmp1.toString(16), 64),
            dmq1: linebrk(key.dmq1.toString(16), 64),
            coeff: linebrk(key.coeff.toString(16), 64)
          };
          return result(privatekey);
        });
      },
      rsaEncrypt: function(publickey, plaintext) {
        var rsa;
        rsa = new RSAKey();
        rsa.setPublic(publickey, "03");
        return rsa.encrypt(plaintext);
      },
      asymDecrypt: function(privatekey, ciphertext) {
        var rsa;
        rsa = new RSAKey();
        rsa.setPrivateEx(privatekey.n, "03", privatekey.d, privatekey.p, privatekey.q, privatekey.dmp1, privatekey.dmq1, privatekey.coeff);
        return rsa.decrypt(ciphertext);
      },
      aesEncrypt: function(password, plaintext) {
        return sjcl.encrypt(password, plaintext, {
          ks: 256
        });
      },
      aesDecrypt: function(password, ciphertext) {
        return sjcl.decrypt(password, ciphertext);
      }
    };
  });

}).call(this);
